#N canvas 408 206 1713 839 12;
#X obj 394 100 inlet;
#X obj 418 158 unpack f f;
#X obj 668 622 *~;
#X obj 785 274 / 127;
#X floatatom 514 202 5 0 0 0 - - -;
#X obj 331 322 osc~;
#X obj 371 319 phasor~;
#X obj 435 350 triangle~;
#X obj 436 319 phasor~;
#X obj 520 318 phasor~;
#X obj 519 353 expr~ $v1 > 0.5;
#X obj 505 237 + 1;
#X obj 785 306 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 942 339 f \$1;
#X obj 1015 339 f \$2;
#X obj 1095 346 f \$3;
#X obj 1159 347 f \$4;
#X obj 783 391 ADSR_Envelope;
#X obj 853 336 f \$0;
#X obj 856 293 inlet;
#X obj 943 299 inlet;
#X obj 1018 298 inlet;
#X obj 1093 303 inlet;
#X obj 1159 298 inlet;
#X obj 515 103 inlet;
#X obj 667 736 outlet~;
#X obj 515 136 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 589 124 v x;
#X obj 515 171 expr x;
#X obj 209 324 tabosc4~ Wave;
#X obj 417 410 selector~ 5 1;
#N canvas 1373 294 1130 763 Vocoder 0;
#N canvas 1308 152 1013 849 fft-analysis 0;
#X obj 92 534 *~;
#X obj 53 534 *~;
#X obj 330 325 *~;
#X obj 298 325 *~;
#X obj 298 351 +~;
#X obj 53 176 *~;
#X obj 53 151 inlet~;
#X obj 53 199 rfft~;
#X obj 53 603 *~;
#X obj 145 238 *~;
#X obj 298 297 rfft~;
#X obj 53 568 rifft~;
#X obj 53 636 outlet~;
#X obj 111 238 *~;
#X obj 111 261 +~;
#X text 379 355 modulus;
#X obj 110 443 *~;
#X obj 357 459 block~ 1024 4;
#X obj 110 391 clip~;
#X obj 86 177 tabreceive~ \$0-hann;
#X obj 356 499 loadbang;
#X obj 143 342 r squelch;
#X obj 142 365 expr 0.01*$f1*$f1;
#X obj 111 287 +~ 1e-020;
#X obj 110 503 *~ 0.00065;
#X obj 86 603 tabreceive~ \$0-hann;
#X obj 298 268 *~;
#X obj 298 239 inlet~;
#X obj 331 269 tabreceive~ \$0-hann;
#X obj 110 314 q8_rsqrt~;
#X obj 298 374 q8_sqrt~;
#X text 379 372 of control;
#X text 377 389 amplitude;
#X text 188 242 reciprocal;
#X text 191 261 modulus of;
#X text 187 281 filter input;
#X text 188 300 amplitude;
#X msg 356 522 \; pd dsp 1 \; window-size 1024 \; squelch 30 \; squelch-set
set 30;
#X text 114 152 filter input;
#X text 363 239 control source;
#X text 360 296 Fourier transform;
#X text 43 19 Internal workings of the timbre stamping algorithm. First
the "filter input" is treated as in the compressor patch \, multiplying
each channel amplitude by one over its modulus (but limited by the
"squelch" parameter.) It is then multiplied by the modulus of the channel
amplitude for the control source (which is Fourier analyzed in parallel
with the filter input.);
#X text 148 440 multiply the two amplitude;
#X text 146 457 factors (for compression;
#X text 148 473 and to apply new timbre);
#X text 594 174 gotta it from 3.audio.examples;
#X connect 0 0 11 1;
#X connect 1 0 11 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 30 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 13 0;
#X connect 7 0 13 1;
#X connect 7 0 1 0;
#X connect 7 1 9 0;
#X connect 7 1 9 1;
#X connect 7 1 0 0;
#X connect 8 0 12 0;
#X connect 9 0 14 1;
#X connect 10 0 3 0;
#X connect 10 0 3 1;
#X connect 10 1 2 0;
#X connect 10 1 2 1;
#X connect 11 0 8 0;
#X connect 13 0 14 0;
#X connect 14 0 23 0;
#X connect 16 0 24 0;
#X connect 18 0 16 0;
#X connect 19 0 5 1;
#X connect 20 0 37 0;
#X connect 21 0 22 0;
#X connect 22 0 18 2;
#X connect 23 0 29 0;
#X connect 24 0 0 1;
#X connect 24 0 1 1;
#X connect 25 0 8 1;
#X connect 26 0 10 0;
#X connect 27 0 26 0;
#X connect 28 0 26 1;
#X connect 29 0 18 0;
#X connect 30 0 16 1;
#X restore 197 217 pd fft-analysis;
#N canvas 1072 394 567 523 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 110 394 graph;
#X obj 327 184 osc~;
#X obj 327 209 *~ -0.5;
#X obj 327 233 +~ 0.5;
#X obj 310 276 tabwrite~ \$0-hann;
#X obj 86 113 r window-size;
#X obj 157 237 /;
#X obj 175 205 samplerate~;
#X obj 157 315 s window-sec;
#X obj 67 251 swap;
#X obj 67 275 /;
#X obj 67 299 s window-hz;
#X obj 168 265 * 1000;
#X obj 168 292 s window-msec;
#X obj 86 148 t f b f;
#X msg 175 155 resize \$1;
#X obj 175 179 s \$0-hann;
#X obj 279 122 r window-hz;
#X msg 352 154 0;
#X obj 279 150 t f b;
#X text 56 20 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec)., f 56
;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 367 247 pd hann-window;
#X floatatom 374 151 0 0 500 0 - squelch-set -;
#X obj 374 175 s squelch;
#X obj 286 150 adc~;
#X obj 197 172 inlet~;
#X obj 197 257 outlet~;
#X text 145 44 simple vocoder based on Miller Puckets fft-analysis
from I06.timbre.stamp.pd patch in pure data help;
#X text 151 88 grabs microphone and phases it with incoming audio waves
from oscillators;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 4 0 0 1;
#X connect 4 1 0 1;
#X connect 5 0 0 0;
#X restore 586 470 pd Vocoder;
#X obj 534 450 vradio 15 1 0 2 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 534 485 + 1;
#X obj 534 419 inlet;
#X obj 471 544 selector~ 2 1;
#X obj 610 531 *~ 1;
#X obj 634 497 inlet;
#X text 925 222 grab values for Envelope patch;
#X text 629 132 gets what oscillators user wants;
#X text 73 323 the 5 types of oscillaotrs Custom \, Sine \, Sawtooth
\, Triangle \, and Square, f 15;
#X text 586 415 phase through vocoder if users turns on vocoder, f
16;
#X text 229 133 packed with frequecy and control value, f 12;
#X connect 0 0 1 0;
#X connect 0 0 26 0;
#X connect 1 0 5 0;
#X connect 1 0 6 0;
#X connect 1 0 8 0;
#X connect 1 0 9 0;
#X connect 1 0 29 0;
#X connect 1 1 3 0;
#X connect 2 0 25 0;
#X connect 3 0 12 0;
#X connect 4 0 11 0;
#X connect 5 0 30 1;
#X connect 6 0 30 2;
#X connect 7 0 30 3;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 30 4;
#X connect 11 0 30 0;
#X connect 12 0 17 0;
#X connect 13 0 17 2;
#X connect 14 0 17 3;
#X connect 15 0 17 4;
#X connect 16 0 17 5;
#X connect 17 0 2 1;
#X connect 18 0 17 1;
#X connect 19 0 18 0;
#X connect 20 0 13 0;
#X connect 21 0 14 0;
#X connect 22 0 15 0;
#X connect 23 0 16 0;
#X connect 24 0 26 0;
#X connect 24 0 27 0;
#X connect 26 0 28 0;
#X connect 28 0 4 0;
#X connect 29 0 30 5;
#X connect 30 0 35 1;
#X connect 30 0 31 0;
#X connect 31 0 36 0;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 34 0 32 0;
#X connect 35 0 2 0;
#X connect 36 0 35 2;
#X connect 37 0 36 1;
